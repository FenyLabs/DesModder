# Replacements for Folder Tools

*plugin* `folder-tools`

## Override circular icons in sidebar

*Module* `expressions/expression-icon-view`

*Find* => `multiSelect`
```js
isMultiSelectEnabled() {
  return this.isGeometry()
}
```

*Replace* `multiSelect` with
```js
isMultiSelectEnabled() {
  return this.isGeometry() || window?.DesModder?.controller?.isPluginEnabled("folder-tools");
}
```

*Find* => `getIconMode`
```js
? "error"
: this.controller.getGraphSettings().config.graphpaper
```

*Replace* `getIconMode` with
```js
? "error"
: this.controller.isInEditListMode() && !!window?.DesModder?.controller?.isPluginEnabled("folder-tools")
? "icon"
: this.controller.getGraphSettings().config.graphpaper
```

*Find*
```js
icon: () => $Dcgview.createElement(__icon__)
```

*Find* inside `icon` => `onTap`
```js
onTap: $e => {
  if (!$e.wasHandled("dragdrop") && !$e.wasLongheld()) {
    __onTapOld__
  }
}
```

*Replace* `onTap` with
```js
onTap: $e => {
  if (!$e.wasHandled("dragdrop") && !$e.wasLongheld()) {
    if (this.controller.isInEditListMode() && !!window?.DesModder?.controller?.isPluginEnabled("folder-tools")) {
      return console.log("onTap!");
    };
    __onTapOld__
  }
}
```

*Find* => `circleIcon`
```js
$.createElement($circleIconComponent, {
  iconType: this.bindFn(this.getIconType),
  backgroundColor: this.bindFn(this.getBackgroundColor),
  whiteIcon: this.bindFn(this.isSelected),
  foregroundColor: this.bindFn(this.getForegroundColor),
  iconModifier: this.bindFn(this.getIconModifier),
  backgroundImage: this.bindFn(this.backgroundImage),
  backgroundOpacity: this.const(1)
})
```

*Replace* `circleIcon` with
```js
$Dcgview.createElement($circleIconComponent, {
  iconType: this.bindFn(() => {
    if (this.controller.isInEditListMode() && !!window?.DesModder?.controller?.isPluginEnabled("folder-tools")) {
      let isChecked = this.controller.isItemSelected(this.model.id);
      return isChecked ? "none" : "hidden";
    }
    return this.getIconType()
  }),
  backgroundColor: this.bindFn(() => {
    if (this.controller.isInEditListMode() && !!window?.DesModder?.controller?.isPluginEnabled("folder-tools")) {
      let isChecked = this.controller.isItemSelected(this.model.id);
      return {
        type: "single-color",
        value: window?.DesModder?.controller?.pluginSettings?.get("set-primary-color")?.primaryColor ?? "#2f72dc"
      };
    }
    return this.getBackgroundColor()
  }),
  whiteIcon: this.bindFn(this.isSelected),
  foregroundColor: this.bindFn(this.getForegroundColor),
  iconModifier: this.bindFn(this.getIconModifier),
  backgroundImage: this.bindFn(this.backgroundImage),
  backgroundOpacity: this.const(1)
})
```